#textdomain wesnoth-pabd

# perhaps a lua version of this would cause less trouble... at some point, create the following:
# tag [enter_transport] will require [filter_vessel] (store_unit keys) for transport and [filter_units]     (store_unit keys)     for passengers
# tag [leave_transport] will require [filter_vessel] (store_unit keys) for transport and [filter_locations] (store_location keys) for passengers

#define ENTER_TRANSPORT FILTER_VESSEL FILTER_UNITS
[store_unit]
    {FILTER_VESSEL}

    variable=vessel
[/store_unit]

[for]
    array=vessel
    variable=n
    reverse=yes
    [do]
        [for]
            start=$vessel[$n].variables.passengers.length
            variable=i
            end=5 # $vessel[$n].level*2
            [do]
                [store_unit]
                    {FILTER_UNITS}
                
                    variable=target
                [/store_unit]

                [if]
                    [variable]
                        name=target.length
                        greater_than=0
                    [/variable]

                    [then]
                        [set_variable]
                            name=random
                            rand=0..$($target.length-1)
                        [/set_variable]

                        [store_unit]
                            [filter]
                                x,y=$target[$random].x,$target[$random].y
                            [/filter]
                            variable=vessel[$n].variables.passengers
                            mode=append
                        [/store_unit]

                        [clear_variable]
                            name=random
                        [/clear_variable]

                        [kill]
                            x,y=$vessel[$n].variables.passengers[$i].x,$vessel[$n].variables.passengers[$i].y
                        [/kill]
                
                        [sound]
                            name=miss-[1~3].ogg
                        [/sound]
                
                        [move_unit_fake]
                            x=$vessel[$n].variables.passengers[$i].x,$vessel[$n].x
                            y=$vessel[$n].variables.passengers[$i].y,$vessel[$n].y
                            type=$vessel[$n].variables.passengers[$i].type
                            side=$vessel[$n].variables.passengers[$i].side
                        [/move_unit_fake]

                        [if]
                            [variable]
                                name=vessel[$n].variables.passengers[$i].canrecruit
                                equals=yes
                            [/variable]
                            [then]
                                [set_variable]
                                    name=vessel[$n].canrecruit
                                    value=yes
                                [/set_variable]
                            [/then]
                        [/if]

                        [unstore_unit]
                            variable=vessel[$n]
                            find_vacant=no
                        [/unstore_unit]
                
                        [unit_overlay]
                            x,y=$vessel[$n].x,$vessel[$n].y
                            image=misc/blank-hex.png~BLIT(misc/leader-crown-alt.png~FL(horiz),0,$($i*8))
                        [/unit_overlay]
                
                        [store_unit]
                            [filter]
                                x,y=$vessel[$n].x,$vessel[$n].y
                            [/filter]
                            variable=vessel[$n]
                        [/store_unit]
                    [/then]
                [/if]

                [clear_variable]
                    name=target
                [/clear_variable]
            [/do]
        [/for]

        [if]
            [variable]
                name=vessel[$n].variables.passengers.length
                greater_than=0
            [/variable]
            [then]
                [modify_unit]
                    [filter]
                        x,y=$vessel[$n].x,$vessel[$n].y
                    [/filter]
        
                    [effect]
                        apply_to=status
                        add=transport
                    [/effect]
                [/modify_unit]
            [/then]
        [/if]
        
        [clear_variable]
            name=vessel[$n]
        [/clear_variable]
    [/do]
[/for]
#enddef


#define LEAVE_TRANSPORT FILTER_VESSEL FILTER_LOCATIONS
[store_unit]
    {FILTER_VESSEL}

    variable=vessel
[/store_unit]

[for]
    array=vessel
    variable=n
    reverse=yes
    [do]
        [for]
            array=vessel[$n].variables.passengers
            variable=i
            reverse=yes
            [do]
                [store_locations]
                    {FILTER_LOCATIONS}

                    variable=target
                [/store_locations]

                [if]
                    [variable]
                        name=target.length
                        greater_than=0
                    [/variable]

                    [then]
                        [set_variable]
                            name=random
                            rand=0..$($target.length-1)
                        [/set_variable]
                        
                        [sound]
                            name=miss-[1~3].ogg
                        [/sound]
    
                        [move_unit_fake]
                            x=$vessel[$n].x,$target[$random].x
                            y=$vessel[$n].y,$target[$random].y
                            type=$vessel[$n].variables.passengers[$i].type
                            side=$vessel[$n].variables.passengers[$i].side
                        [/move_unit_fake]
						
                        {VARIABLE vessel[$n].variables.passengers[$i].moves 0}
                        {VARIABLE vessel[$n].variables.passengers[$i].attacks_left 0}
						
                        [unstore_unit]
                            variable=vessel[$n].variables.passengers[$i]
        
                            x=$target[$random].x
                            y=$target[$random].y
                        [/unstore_unit]
        
                        [clear_variable]
                            name=random
                        [/clear_variable]
    
                        [if]
                            [variable]
                                name=vessel[$n].variables.passengers[$i].canrecruit
                                equals=yes
                            [/variable]
                            [then]
                                [set_variable]
                                    name=vessel[$n].canrecruit
                                    value=no
                                [/set_variable]
                            [/then]
                        [/if]
    
                        [clear_variable]
                            name=vessel[$n].variables.passengers[$i]
                        [/clear_variable]
    
                        [unstore_unit]
                            variable=vessel[$n]
                            find_vacant=no
                        [/unstore_unit]
    
                        [remove_unit_overlay]
                            x,y=$vessel[$n].x,$vessel[$n].y
                            image=misc/blank-hex.png~BLIT(misc/leader-crown-alt.png~FL(horiz),0,$($i*8))
                        [/remove_unit_overlay]
    
                        [store_unit]
                            [filter]
                                x,y=$vessel[$n].x,$vessel[$n].y
                            [/filter]
                            variable=vessel[$n]
                        [/store_unit]
                    [/then]
                [/if]

                [clear_variable]
                    name=target
                [/clear_variable]
            [/do]
        [/for]

        [if]
            [variable]
                name=vessel[$n].variables.passengers.length
                less_than=1
            [/variable]
            [then]
                [modify_unit]
                    [filter]
                        x,y=$vessel[$n].x,$vessel[$n].y
                    [/filter]
    
                    [effect]
                        apply_to=status
                        remove=transport
                    [/effect]
                [/modify_unit]
            [/then]
        [/if]

        [clear_variable]
            name=vessel[$n]
        [/clear_variable]
    [/do]
[/for]
#enddef

#define LEAVE_TRANSPORT_DESTROYED FILTER_VESSEL FILTER_LOCATIONS
[store_unit]
    {FILTER_VESSEL}

    variable=vessel
[/store_unit]

[for]
    array=vessel
    variable=n
    reverse=yes
    [do]
        [for]
            array=vessel[$n].variables.passengers
            variable=i
            reverse=yes
            [do]
                [store_locations]
                    {FILTER_LOCATIONS}

                    variable=target
                [/store_locations]

                [if]
                    [variable]
                        name=target.length
                        greater_than=0
                    [/variable]

                    [then]
                        [set_variable]
                            name=random
                            rand=0..$($target.length-1)
                        [/set_variable]
                        
                        [sound]
                            name=miss-[1~3].ogg
                        [/sound]
    
                        [move_unit_fake]
                            x=$vessel[$n].x,$target[$random].x
                            y=$vessel[$n].y,$target[$random].y
                            type=$vessel[$n].variables.passengers[$i].type
                            side=$vessel[$n].variables.passengers[$i].side
                        [/move_unit_fake]
						
                        {VARIABLE vessel[$n].variables.passengers[$i].moves 0}
                        {VARIABLE vessel[$n].variables.passengers[$i].attacks_left 0}
						
                        [unstore_unit]
                            variable=vessel[$n].variables.passengers[$i]
        
                            x=$target[$random].x
                            y=$target[$random].y
                        [/unstore_unit]
						
						[harm_unit]
							[filter]
								x=$target[$random].x
								y=$target[$random].y
							[/filter]
							amount=8
							damage_type=fire
							slowed=yes
							alignment=neutral
							fire_event=yes
							animate=defender
							delay=0
							experience=yes
						[/harm_unit]
						
                        [clear_variable]
                            name=random
                        [/clear_variable]
    
                        [if]
                            [variable]
                                name=vessel[$n].variables.passengers[$i].canrecruit
                                equals=yes
                            [/variable]
                            [then]
                                [set_variable]
                                    name=vessel[$n].canrecruit
                                    value=no
                                [/set_variable]
                            [/then]
                        [/if]
    
                        [clear_variable]
                            name=vessel[$n].variables.passengers[$i]
                        [/clear_variable]
    
                        [unstore_unit]
                            variable=vessel[$n]
                            find_vacant=no
                        [/unstore_unit]
    
                        [remove_unit_overlay]
                            x,y=$vessel[$n].x,$vessel[$n].y
                            image=misc/blank-hex.png~BLIT(misc/leader-crown-alt.png~FL(horiz),0,$($i*8))
                        [/remove_unit_overlay]
    
                        [store_unit]
                            [filter]
                                x,y=$vessel[$n].x,$vessel[$n].y
                            [/filter]
                            variable=vessel[$n]
                        [/store_unit]
                    [/then]
                [/if]

                [clear_variable]
                    name=target
                [/clear_variable]
            [/do]
        [/for]

        [if]
            [variable]
                name=vessel[$n].variables.passengers.length
                less_than=1
            [/variable]
            [then]
                [modify_unit]
                    [filter]
                        x,y=$vessel[$n].x,$vessel[$n].y
                    [/filter]
    
                    [effect]
                        apply_to=status
                        remove=transport
                    [/effect]
                [/modify_unit]
            [/then]
        [/if]

        [clear_variable]
            name=vessel[$n]
        [/clear_variable]
    [/do]
[/for]
#enddef

#define TRANSPORT_SHIP_MENU
[event]
    name=prestart

    [set_menu_item]
        id=enter_ship
        description= _"Enter This Ship"
        image=icons/unit-groups/race_mechanical2_30.png~SCALE(25,25) #buttons/WML-custom.png
        [default_hotkey]
            key="c"
        [/default_hotkey]

        [show_if]
            [have_unit]
                x,y=$x1,$y1
                side=$side_number
                race=mechanical

                [not]
                    status=transport
                [/not]

                [filter_adjacent]
                    side=$unit.side
                    [not]
                        race=mechanical
                    [/not]
                [/filter_adjacent]
            [/have_unit]
        [/show_if]

        [command]
            {ENTER_TRANSPORT
            (
                [filter]
                    x,y=$x1,$y1
                [/filter]
            )
            (
                [filter]
                    [filter_location]
                        x,y=$x1,$y1
                        radius=1
                    [/filter_location]
            
                    side=$side_number
                    [not]
                        race=mechanical
                    [/not]
                [/filter]
            )
            }
        [/command]
    [/set_menu_item]

    [set_menu_item]
        id=leave_ship
        description= _"Leave This Ship"
        image=icons/unit-groups/race_mechanical2_30-pressed.png~SCALE(25,25) #buttons/WML-custom.png
        [default_hotkey]
            key="v"
        [/default_hotkey]

        [show_if]
            [have_unit]
                x,y=$x1,$y1
                side=$side_number
                race=mechanical

                status=transport
            [/have_unit]
        [/show_if]

        [command]
            {LEAVE_TRANSPORT
            (
                [filter]
                    x,y=$x1,$y1
                [/filter]
            )
            (
                terrain=!,Wo*,Q*,X*
        
                [filter_adjacent_location]
                    x,y=$x1,$y1
                [/filter_adjacent_location]
        
                [not]
                    [filter]
                    [/filter]
                [/not]
            )
            }
        [/command]
    [/set_menu_item]
[/event]
#enddef



#define TRANSPORT_SHIP_EVENTS
[event]
    name=last breath
    first_time_only=no

    [filter]
        race=mechanical
        status=transport
    [/filter]

    {LEAVE_TRANSPORT_DESTROYED
    (
        [filter]
            x,y=$x1,$y1
        [/filter]
    )
    (
        [not]
            [filter]
            [/filter]
        [/not]
    
        [and]
            x,y=$x1,$y1
            radius=2
        [/and]
    )
    }
[/event]


[event]
    name=victory

    [clear_menu_item]
        id=enter_ship
    [/clear_menu_item]

    [clear_menu_item]
        id=leave_ship
    [/clear_menu_item]

    {LEAVE_TRANSPORT
    (
        [filter]
            race=mechanical
            status=transport
        [/filter]
    )
    (
        x=recall
        y=recall
    )
    }
[/event]
#enddef



#define TRANSPORT_SHIP_AI
[event]
    name=prestart

    [store_side]
        [filter_side]
            controller=ai
        [/filter_side]

        variable=ai_sides
    [/store_side]

    [for]
        array=ai_sides

        [do]
            [micro_ai]
                side=$ai_sides[$i].side
                ai_type=goto
                action=add
                release_unit_at_goal=no #yes
                ca_score=170000
                unique_goals=yes
        
                [filter]
                    race=mechanical
        
                    [not]
                        status=transport
                    [/not]

                    [filter_location]
                        terrain=W*
                    [/filter_location]
                [/filter]
        
                [filter_location]
                    [filter]
                        side=$ai_sides[$i].side
        
                        [not]
                            race=mechanical
                        [/not]

                        [filter_location]
                            terrain=W*
                        [/filter_location]
                    [/filter]
        
                    radius=1
                [/filter_location]
            [/micro_ai]
        
            [micro_ai]
                side=$ai_sides[$i].side
                ai_type=goto
                action=add
                release_unit_at_goal=no #yes
                ca_score=170000
                unique_goals=yes
        
                [filter]
                    [not]
                        race=mechanical
						[filter_adjacent]
							is_enemy=yes
						[/filter_adjacent]
                    [/not]

                    [filter_location]
                        terrain=W*
                    [/filter_location]
                [/filter]
        
                [filter_location]
                    [filter]
                        side=$ai_sides[$i].side
                        race=mechanical
            
                        [not]
                            status=transport
                        [/not]
    
                        [filter_location]
                            terrain=W*
                        [/filter_location]
                    [/filter]
        
                    radius=1
                [/filter_location]
            [/micro_ai]
        [/do]
    [/for]

    {CLEAR_VARIABLE ai_sides}
[/event]



[event]
    name=moveto
    first_time_only=no

    [filter]
        #[or]
            [filter_side]
                controller=ai
            [/filter_side]

            #x,y=$x1,$y1

            [not]
                race=mechanical
            [/not]

            [filter_location]
                terrain=W*
            [/filter_location]

            [filter_adjacent]
                side=$side_number
    
                race=mechanical
        
                [not]
                    status=transport
                [/not]
    
                [filter_location]
                    terrain=W*
                [/filter_location]

                [not]
                    [filter_adjacent]
                        is_enemy=yes
                    [/filter_adjacent]
                [/not]
            [/filter_adjacent]
        #[/or]

        [or]
            [filter_side]
                controller=ai
            [/filter_side]

            #x,y=$x1,$y1

            race=mechanical
        
            [not]
                status=transport
            [/not]

            [filter_location]
                terrain=W*
            [/filter_location]

            [filter_adjacent]
                side=$side_number
    
                [not]
                    race=mechanical
                [/not]
    
                [filter_location]
                    terrain=W*
                [/filter_location]

                [not]
                    [filter_adjacent]
                        is_enemy=yes
                    [/filter_adjacent]
                [/not]
            [/filter_adjacent]
        [/or]
    [/filter]

    {ENTER_TRANSPORT
    (
        [filter]
            side=$side_number

            race=mechanical
        
            [not]
                status=transport
            [/not]

            [filter_location]
                terrain=W*
                #[and]
                #    x,y=$x1,$y1
                #    radius=1
                #[/and]
            [/filter_location]

            [filter_adjacent]
                side=$side_number
    
                [not]
                    race=mechanical
                [/not]
    
                [filter_location]
                    terrain=W*
                [/filter_location]

                [not]
                    [filter_adjacent]
                        is_enemy=yes
                    [/filter_adjacent]
                [/not]
            [/filter_adjacent]
        [/filter]
    )
    (
        [filter]
            [filter_location]
                x,y=$vessel[$n].x,$vessel[$n].y
                radius=1
            [/filter_location]

            side=$side_number
            
            [not]
                race=mechanical
            [/not]
        [/filter]
    )
    }
[/event]


[event]
    name=attack
    first_time_only=no

    [filter]
        [filter_side]
            controller=ai
        [/filter_side]

        race=mechanical
        status=transport
    [/filter]

    {LEAVE_TRANSPORT
    (
        [filter]
            x,y=$x1,$y1
        [/filter]
    )
    (
        terrain=!,Wo*

        [filter_adjacent_location]
            x,y=$x1,$y1
        [/filter_adjacent_location]

        [not]
            [filter]
            [/filter]
        [/not]
    )
    }
[/event]
#enddef
